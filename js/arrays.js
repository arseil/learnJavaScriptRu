// task#1

/* 
Скопирован ли массив?
важность: 3
Что выведет следующий код?

let fruits = ["Яблоки", "Груша", "Апельсин"];

// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан");

// что в fruits?
alert( fruits.length ); // ? 
*/

let fruits = ["Яблоки", "Груша", "Апельсин"];

// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан");

// что в fruits?
alert( fruits.length ); // 4


// task#2

/* 
Операции с массивами
важность: 5
Давайте произведём 5 операций с массивом.

Создайте массив styles с элементами «Джаз» и «Блюз».
Добавьте «Рок-н-ролл» в конец.
Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
Удалите первый элемент массива и покажите его.
Вставьте Рэп и Регги в начало массива.
Массив по ходу выполнения операций:

Джаз, Блюз
Джаз, Блюз, Рок-н-ролл
Джаз, Классика, Рок-н-ролл
Классика, Рок-н-ролл
Рэп, Регги, Классика, Рок-н-ролл 
*/

let styles = ['Джаз', 'Блюз'];
console.log(styles);

styles.push('Рок-н-ролл');
console.log(styles);

styles[Math.floor(styles.length * 0.5)] = "Классика";
console.log(styles);

styles.shift();
console.log(styles);

styles.unshift('Рэп', 'Регги');
console.log(styles);

// task#3

/* 
Вызов в контексте массива
важность: 5
Каков результат? Почему?

let arr = ["a", "b"];

arr.push(function() {
  alert( this );
});

arr[2](); // ? 
*/

let arr = ["a", "b"];

arr.push(function() {
  console.log( this );
});

arr[2](); // [ 'a', 'b', [Function (anonymous)] ]

// task#4

/* 
Сумма введённых чисел
важность: 4
Напишите функцию sumInput(), которая:

Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
Подсчитывает и возвращает сумму элементов массива.
P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0». 
*/

function sumInput() {
    let arr = [];
    let sum = 0;

    for (let i = 0; i <= arr.length + 1; i++) {
        arr[i] = prompt('Введите значение', 0);
        if (arr[i] === null || arr[i] === '' || !isFinite(arr[i])) {
            break;
        } else {
            sum += +arr[i];
        }
    }

    return alert(`Sum: ${sum}`);
}
sumInput();


// task#5

/* 
Подмассив наибольшей суммы
важность: 2
На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].

Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.

Функция getMaxSubSum(arr) должна возвращать эту сумму.

Например:

getMaxSubSum([-1, 2, 3, -9]) == 5 (сумма выделенных элементов)
getMaxSubSum([2, -1, 2, 3, -9]) == 6
getMaxSubSum([-1, 2, 3, -9, 11]) == 11
getMaxSubSum([-2, -1, 1, 2]) == 3
getMaxSubSum([100, -9, 2, -3, 5]) == 100
getMaxSubSum([1, 2, 3]) == 6 (берём все)
Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна «0»:

getMaxSubSum([-1, -2, -3]) = 0
Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций. 
*/

function getMaxSubSum(arr) {
    let value = 0;
    if (!arr[0]) return value;
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] > arr[i++] && arr[i] < arr[i++]) {
            value += +arr[i]
        } else if () {
            
        } else if (value < 0 || arr[i] === undefined) {
            return value;
        } else {
            return value;
        }
    }
}